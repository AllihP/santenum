# Generated by Django 5.2.1 on 2025-06-23 22:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la catégorie')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Catégorie de Module',
                'verbose_name_plural': 'Catégories de Modules',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_utilisateur', models.CharField(choices=[('expert_telemedecine', 'Expert en Télémédecine'), ('juriste', 'Juriste'), ('expert_informatique', 'Expert Informatique'), ('coach', 'Coach'), ('expert_biomedical', 'Expert Biomédical'), ('medecin', 'Médecin'), ('technicien', 'Technicien'), ('sage_femme', 'Sage-Femme'), ('paramedical', 'Paramédical'), ('pharmacien', 'Pharmacien')], default='medecin', max_length=50, verbose_name="Type d'utilisateur")),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de téléphone')),
                ('profession_medicale', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profession Médicale')),
                ('niveau_acces', models.IntegerField(default=1, verbose_name="Niveau d'accès")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name='Titre du module')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description détaillée')),
                ('niveau', models.CharField(choices=[('debutant', 'Débutant'), ('intermediaire', 'Intermédiaire'), ('avance', 'Avancé')], default='debutant', max_length=20, verbose_name='Niveau du module')),
                ('requiert_certification', models.BooleanField(default=False, verbose_name='Requiert une certification')),
                ('disponible_hors_ligne', models.BooleanField(default=True, verbose_name='Disponible hors ligne')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='modules', to='elearning.categoriemodule', verbose_name='Catégorie')),
                ('createur', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='modules_crees', to=settings.AUTH_USER_MODEL, verbose_name='Créateur du module')),
            ],
            options={
                'verbose_name': 'Module de Formation',
                'verbose_name_plural': 'Modules de Formation',
                'ordering': ['-date_creation'],
            },
        ),
    ]
